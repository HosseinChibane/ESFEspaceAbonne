imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: fr
    app.path.users_images: /users/images
    app.path.users_pdf: /users/pdf
    app.path.universites_pdf: /universites/pdf
    app.path.demandes_pdf: /demandes/pdf

framework:
    #esi: ~
    translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.root_dir%/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'
    form_themes:
        - 'bootstrap_3_layout.html.twig'
        - 'VichUploaderBundle:Form:fields.html.twig'

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/../var/data/data.sqlite"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }

# FOSUserBundle Configuration
fos_user:
    db_driver:              orm # Required
    firewall_name:          main # Required
    user_class:             ESF\EspaceAbonneBundle\Entity\User # Required
    use_listener:           true
    use_flash_notifications: true
    use_authentication_listener: true
    use_username_form_type: true
    model_manager_name:     null  # change it to the name of your entity/document manager if you don't want to use the default one.
    from_email:
        address:        "%mailer_user%"
        sender_name:    "%mailer_user%"
    profile:
        form:
            type:               FOS\UserBundle\Form\Type\ProfileFormType # or 'fos_user_profile' on Symfony < 2.8
            name:               fos_user_profile_form
            validation_groups:  [Profile, Default]
    change_password:
        form:
            type:               FOS\UserBundle\Form\Type\ChangePasswordFormType # or 'fos_user_change_password' on Symfony < 2.8
            name:               fos_user_change_password_form
            validation_groups:  [ChangePassword, Default]
    registration:
        confirmation:
            from_email: # Use this node only if you don't want the global email address for the confirmation email
                address:        "%mailer_user%"
                sender_name:    "%mailer_user%"
            enabled:    false # change to true for required email confirmation
            template:   '@FOSUser/Registration/email.txt.twig'
        form:
            type:               ESF\EspaceAbonneBundle\Form\RegistrationType # or 'fos_user_registration' on Symfony < 2.8
            name:               fos_user_registration_form
            validation_groups:  [Registration, Default]
    resetting:
        token_ttl: 86400
        email:
            from_email: # Use this node only if you don't want the global email address for the resetting email
                address:        "%mailer_user%"
                sender_name:    "%mailer_user%"
            template:   '@FOSUser/Resetting/email.txt.twig'
        form:
            type:               FOS\UserBundle\Form\Type\ResettingFormType # or 'fos_user_resetting' on Symfony < 2.8
            name:               fos_user_resetting_form
            validation_groups:  [ResetPassword, Default]
    service:
        mailer:                 fos_user.mailer.default
        email_canonicalizer:    fos_user.util.canonicalizer.default
        username_canonicalizer: fos_user.util.canonicalizer.default
        token_generator:        fos_user.util.token_generator.default
        user_manager:           fos_user.user_manager.default


# VichUploaderBundle Configuration
vich_uploader:
    db_driver: orm # or mongodb or propel or phpcr
    mappings:
        users_images:
            namer:              vich_uploader.namer_origname
            uri_prefix:         '%app.path.users_images%'
            upload_destination: '%kernel.root_dir%/../web/users/images'            
            inject_on_load:     false
            delete_on_update:   true
            delete_on_remove:   true
        users_pdf:
            namer:              vich_uploader.namer_origname
            uri_prefix:         '%app.path.users_pdf%'
            upload_destination: '%kernel.root_dir%/../web/users/pdf'            
            inject_on_load:     false
            delete_on_update:   true
            delete_on_remove:   true
        universites_pdf:
            namer:              vich_uploader.namer_origname
            uri_prefix:         '%app.path.universites_pdf%'
            upload_destination: '%kernel.root_dir%/../web/universites/pdf'            
            inject_on_load:     false
            delete_on_update:   true
            delete_on_remove:   true
        demandes_pdf:
            namer:              vich_uploader.namer_origname
            uri_prefix:         '%app.path.demandes_pdf%'
            upload_destination: '%kernel.root_dir%/../web/demandes/pdf'            
            inject_on_load:     false
            delete_on_update:   true
            delete_on_remove:   true

# LiipImageBundle Configuration
liip_imagine:
    resolvers:
        default:
            web_path: ~
    filter_sets:
        cache: ~
        my_thumb:
            # adjust the image quality
            quality: 100
            # list of transformations to apply (the "filters")
            filters:
                # create a thumbnail: set size to 120x90 and use the "outbound" mode
                # to crop the image when the size ratio of the input differs
                thumbnail: { size: [260, 260], mode: outbound }
                # create a 2px black border: center the thumbnail on a black background
                # 4px larger to create a 2px border around the final image
                #background: { size: [124, 94], position: center, color: '#000000' }